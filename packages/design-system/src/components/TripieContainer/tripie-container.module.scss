@use 'sass:map';
@use '../../mixins' as *;
@use '../../variables' as *;

.container {
  display: inline-block;
}
.preserve-white-space {
  @media (max-width: 470px) {
    white-space: pre-wrap;
  }
}
.flex {
  @include flex;
}

.layout-fill-available {
  width: -moz-available;
  width: -webkit-fill-available;
  width: stretch; // spec has changed
}

.align-center {
  display: inline-flex;
  // justify-content: center;
  align-content: stretch;
  flex-wrap: nowrap;
}
.align-right {
  display: inline-flex;
  // justify-content: flex-end;
  align-content: stretch;
  flex-wrap: nowrap;
}

@each $key, $value in $space-map {
  .container.all.#{$key} {
    @include margins('all', $value);
  }
  .container.top-bottom.#{$key} {
    @include margins('top-bottom', $value);
  }
  .container.left-right.#{$key} {
    @include margins('left-right', $value);
  }
  .container.left.#{$key} {
    @include margins('left', $value);
  }
  .container.right.#{$key} {
    @include margins('right', $value);
  }
  .container.top.#{$key} {
    @include margins('top', $value);
  }
  .container.bottom.#{$key} {
    @include margins('bottom', $value);
  }
  .container.top-left-right.#{$key} {
    @include margins('top-left-right', $value);
  }
  .container.left-right-bottom.#{$key} {
    @include margins('left-right-bottom', $value);
  }
}

@each $value in $justify-content-values {
  .justify-content-#{$value} {
    @include justify-content($value);
  }
}

@each $value in $align-items-values {
  .align-items-#{$value} {
    @include align-items($value);
  }
}

@each $key, $value in $gap-space-map {
  .gap-#{$key} {
    @include gap($key, $value);
  }
}

.with-border {
  @include with-border;
}
