@use '../../../mixins/flex' as *;
@use '../../../mixins/justify-content' as *;
@use '../../../mixins/align-items' as *;
@use '../../../mixins/align-text' as *;
@use '../../../mixins/gap' as *;
@use '../../../mixins/background' as *;
@use '../../../mixins/paddings' as *;
@use '../../../variables/justify-content-values' as *;
@use '../../../variables/align-items-values' as *;
@use '../../../variables/align-text-values' as *;
@use '../../../variables/gap-space-map' as *;
@use '../../../variables/space-map' as *;
@use '../../../variables/direction-map' as *;

.flex {
  @include flex;
}

.layout-fill-available {
  width: -moz-available;
  width: -webkit-fill-available;
  width: stretch; // spec has changed
  height: -moz-available;
  height: -webkit-fill-available;
  height: stretch; // spec has changed
}

@each $value in $justify-content-values {
  .justify-content-#{$value} {
    @include justify-content($value);
  }
}

@each $value in $align-items-values {
  .align-items-#{$value} {
    @include align-items($value);
  }
}

@each $value in $align-text-values {
  .align-text-#{$value} {
    @include align-text($value);
  }
}

@each $key, $value in $gap-space-map {
  .gap-#{$key} {
    @include gap($key, $value);
  }
}

$variant-space-map: (
  0: '0',
  1: '1',
  2: '2',
  3: '3',
  4: '4',
  5: '5',
  6: '6',
  7: '7',
  8: '8',
);

@each $key, $value in $variant-space-map {
  .background-#{$key} {
    @include background($value);
  }
}

@each $direction-key, $direction in $direction-map {
  @each $key, $value in $space-map {
    .paddings_#{$key}_to_#{$direction-key} {
      @include paddings($direction, $value);
    }
  }
}

.full-screen {
  width: 100vw;
  height: 100vh;
}
